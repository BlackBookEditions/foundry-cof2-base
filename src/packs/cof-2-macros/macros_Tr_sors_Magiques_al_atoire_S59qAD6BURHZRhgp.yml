name: Tr√©sors Magiques al√©atoire
type: script
author: LEtUoNWt5mYBIjrk
img: icons/containers/chest/chest-reinforced-steel-pink.webp
scope: global
command: >-
  // Modifie ici la formule pour diminuer ou augmenter le nombre d'objets

  const numObjectsFormula = "2d3"; // par exemple "2d4", "1d8", "3" etc.


  // Macro : Tirer (le r√©sultat) macros au hasard et regrouper images + labels
  seulement

  const macroList = [
    { name: "Arme Magique Al√©atoire", label: "Arme" },
    { name: "Armure Magique Al√©atoire", label: "Armure" },
    { name: "Parchemin/Baguette Mineur Al√©atoire", label: "Parchemin/Baguette (mineur)" },
    { name: "Parchemin/Baguette Moyen Al√©atoire", label: "Parchemin/Baguette (moyen)" },
    { name: "Potion Magique Al√©atoire", label: "Potion" },
    { name: "Objet de Puissance Al√©atoire", label: "Objet de Puissance" },
    { name: "Objet de Pouvoir Al√©atoire", label: "Pouvoir" }
  ];


  // Lancer la formule de la premi√®re ligne

  const roll = await new Roll(numObjectsFormula).evaluate();

  const count = roll.total;


  const snippets = [];


  async function runMacroFiltered(entry) {
    const macro = game.macros.getName(entry.name);
    if (!macro) return `<p><em>Macro "${entry.label}" introuvable</em></p>`;

    return await new Promise(async (resolve) => {
      let resolved = false;

      Hooks.once("preCreateChatMessage", (doc, data) => {
        if (resolved) return;
        resolved = true;

        let content = data?.content ?? doc?.content ?? "";

        // Filtrer : ne garder que <img> et <strong> (ou <h4>) -> enlever description
        const temp = document.createElement("div");
        temp.innerHTML = content;
        temp.querySelectorAll("p").forEach(p => {
          // Supprime tout le texte sauf <strong> et <img>
          Array.from(p.childNodes).forEach(n => {
            if (n.nodeName !== "STRONG" && n.nodeName !== "IMG") n.remove();
          });
        });
        content = temp.innerHTML;

        resolve(content || `<p><em>Macro "${entry.label}" n'a rien produit</em></p>`);
        return false; // annule le message original
      });

      try {
        await macro.execute();
      } catch (e) {
        if (!resolved) resolve(`<p><em>Erreur dans "${entry.label}" : ${e.message}</em></p>`);
      }

      setTimeout(() => { // s√©curit√© si la macro ne cr√©e pas de message
        if (!resolved) resolve(`<p><em>Macro "${entry.label}" n'a rien produit</em></p>`);
      }, 1500);
    });
  }


  for (let i = 0; i < count; i++) {
    const pick = macroList[Math.floor(Math.random() * macroList.length)];
    const html = await runMacroFiltered(pick);
    snippets.push(`<div class="macro-bundle-item" style="border-bottom:3px solid grey;text-align: -webkit-center;">${html}</div>`);
  }


  // Message final

  const content = `
    <div class="macro-rolltables-results">
      <h3>Objets magiques x${count}</h3>
      ${snippets.join("")}
    </div>
  `.trim();


  await ChatMessage.create({
    speaker: ChatMessage.getSpeaker(),
    content,
    whisper: [game.user.id]  // üîí Message visible uniquement par l'utilisateur
  });
folder: null
flags: {}
_stats:
  compendiumSource: null
  duplicateSource: null
  exportSource: null
  coreVersion: '13.346'
  systemId: co
  systemVersion: 13.344.0
  createdTime: 1755213997384
  modifiedTime: 1755213997384
  lastModifiedBy: LEtUoNWt5mYBIjrk
_id: S59qAD6BURHZRhgp
sort: 0
ownership:
  default: 0
  LEtUoNWt5mYBIjrk: 3
_key: '!macros!S59qAD6BURHZRhgp'
